package com.yishan.javaplus.config;import com.amazonaws.services.s3.AmazonS3;import com.amazonaws.services.sqs.AmazonSQS;import com.amazonaws.services.sqs.model.GetQueueUrlRequest;import com.amazonaws.services.sqs.model.GetQueueUrlResult;import org.mockito.Mockito;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.context.annotation.Profile;@Configurationpublic class MockConfig {    @Value("${aws.queueName}")    private String queueName;    //    @Bean    //    public StorageService getStorageService(@Autowired AmazonS3 s3Client) throws IOException {    //        StorageService storageService = new StorageService(s3Client);    //        storageService.setBucket("unit_test");    //        return storageService;    //    }//    @Bean//    public MessageSQSService getMessageSQSService(@Autowired AmazonSQS sqsClient) throws IOException{//        MessageSQSService messageSQSService = new MessageSQSService(sqsClient);//        //messageSQSService.set("unit_test");//        return messageSQSService;//    }    @Bean    @Profile("unit")    public AmazonS3 getAmazonS3Client(){        AmazonS3 s3Client = Mockito.mock(AmazonS3.class);        return s3Client;    }    @Bean    @Profile("unit")    public AmazonSQS getAmazonSQSClient(){        AmazonSQS sqsClient = Mockito.mock(AmazonSQS.class);//        CreateQueueRequest createQueueRequest = Mockito.mock(CreateQueueRequest.class);//        CreateQueueResult createQueueResult = Mockito.mock(CreateQueueResult.class);//        Mockito.when(sqsClient.createQueue(createQueueRequest)).thenReturn(createQueueResult);        GetQueueUrlRequest getQueueUrlRequest = Mockito.mock(GetQueueUrlRequest.class);        GetQueueUrlResult getQueueUrlResult = Mockito.mock(GetQueueUrlResult.class);        Mockito.when(sqsClient.getQueueUrl(queueName)).thenReturn(getQueueUrlResult);        Mockito.when(getQueueUrlResult.getQueueUrl()).thenReturn("myUrl");        return sqsClient;    }}